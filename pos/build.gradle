apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
    compileSdkVersion safeExtGet("compileSdkVersion", 28)
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName ARTIFACT_VERSION
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "API_HOST", '"https://api.mybankone.com"')
            buildConfigField("String", "NOTIFICATION_TOKEN", '"C175CFBE-E036-487B-9CC5-D8DFD2199989"')
        }

        releaseStaging {
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "API_HOST", '"http://52.224.166.115"')
            buildConfigField("String", "NOTIFICATION_TOKEN", '"C175CFBE-E036-487B-9CC5-D8DFD2199989"')
            matchingFallbacks = ['release', 'debug']
        }

        debug {
            debuggable true
            buildConfigField("String", "API_HOST", '"http://52.224.166.115"')
            buildConfigField("String", "NOTIFICATION_TOKEN", '"C175CFBE-E036-487B-9CC5-D8DFD2199989"')
        }

        debugLive {
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "API_HOST", '"https://api.mybankone.com"')
            buildConfigField("String", "NOTIFICATION_TOKEN", '"C175CFBE-E036-487B-9CC5-D8DFD2199989"')
            matchingFallbacks = ['debug', 'release']
        }
    }
    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    resourcePrefix 'pos_'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation project(path: ':core')
    implementation project(path: ':uicentral')
    implementation fileTree(dir: 'jniLibs', include: ['*.so'])

    api files('libs/emv.jar')
    api files('libs/core-3.1.0.jar')
    api files('libs/jpos-1.9.0.jar')
    api files('libs/SmartCardLib.jar')
    api files('libs/telpo_api.jar')
    api files('libs/PayLib-release-1.4.17.aar')
    api files('libs/iBridge.jar')
    api files('libs/jhlblueconn.jar')
    implementation files('libs/dspread_android_pos_sdk_2.9.4.jar')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.core:core-ktx:${versions.coreKtx}"
    implementation "com.google.android.material:material:${versions.material}"
    implementation "androidx.cardview:cardview:1.0.0"
//    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "androidx.recyclerview:recyclerview:1.1.0"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
    implementation 'com.google.android:flexbox:1.0.0'

    // Time
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.0'

    implementation "androidx.room:room-runtime:${versions.room}"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt "androidx.room:room-compiler:${versions.room}"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:${versions.room}"

    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"

    // Test helpers
    testImplementation "androidx.room:room-testing:${versions.room}"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}"

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"

    implementation "androidx.work:work-runtime-ktx:${versions.work}"

    testImplementation 'junit:junit:4.12'
}
