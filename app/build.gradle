import com.cluster.buildsrc.Versions

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "kotlinx-serialization"
apply plugin: "com.google.gms.google-services"
apply plugin: "com.google.firebase.crashlytics"
//apply plugin: "com.google.firebase.firebase-perf"
apply plugin: "io.objectbox"

kapt {
    correctErrorTypes = true
    useBuildCache = true
}

android {
    compileSdkVersion versions.compileSdk
    useLibrary("org.apache.http.legacy")

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        ndkVersion = "21.3.6528147"
        multiDexEnabled  true
        vectorDrawables.useSupportLibrary = true
        versionCode 40
        versionName "1.5.0"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true",
                        "objectbox.modelPath"  : "$projectDir/schemas/objectbox.json".toString(),
                ]
            }
        }
    }


    buildFeatures {
        dataBinding true
        compose true
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/**', 'kotlin/**', 'okhttp3/**', 'org/**']
        }
        resources {
            excludes += ['META-INF/**', 'kotlin/**', 'okhttp3/**', 'org/**', '**.properties', '**.bin']
        }
    }


    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            keyAlias "androiddebugkey"
            keyPassword "android"
            storePassword "android"
        }
    }

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            buildConfigField("String", "API_HOST", "\"https://www.cluster.africa\"")
            buildConfigField("String", "NOTIFICATION_TOKEN", "\"C175CFBE-E036-487B-9CC5-D8DFD2199989\"")
            manifestPlaceholders = [usesCleartextTraffic: "false"]
        }

        staging {
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            buildConfigField("String", "API_HOST", "\"http://52.168.85.231\"")
            buildConfigField("String", "NOTIFICATION_TOKEN", "\"C175CFBE-E036-487B-9CC5-D8DFD2199989\"")
            manifestPlaceholders = [usesCleartextTraffic: "true"]
            matchingFallbacks = ["release", "debug"]
            signingConfig signingConfigs.debug
            versionNameSuffix = "-staging"
        }

        debug {
            debuggable true
            buildConfigField("String", "API_HOST", "\"http://52.168.85.231\"")
            buildConfigField("String", "NOTIFICATION_TOKEN", '"C175CFBE-E036-487B-9CC5-D8DFD2199989"')
            manifestPlaceholders = [usesCleartextTraffic: "true"]
            ext.enableCrashlytics = false
            versionNameSuffix = "-dev"
        }
    }

    flavorDimensions "flavor"

    productFlavors {
        creditclub {
            dimension "flavor"
            applicationId "com.appzonegroup.app.creditclub.plus"
        }

        polaris {
            dimension "flavor"
            applicationId "com.appzonegroup.app.creditclub.polaris"
        }

        access {
            dimension "flavor"
            applicationId "com.creditclub.access"
        }

        gtbank {
            dimension "flavor"
            applicationId "com.creditclub.gtbank"
        }

        purple {
            dimension "flavor"
            applicationId "com.creditclub.purple"
        }

        grooming {
            dimension "flavor"
            applicationId "com.creditclub.grooming"
        }

        heritage {
            dimension "flavor"
            applicationId "africa.cluster.heritage"
        }

        halo {
            dimension "flavor"
            applicationId "africa.cluster.halo"
        }
    }
    sourceSets {
        main {
            java.srcDirs = [
                    "src/main/java"
            ]
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
        useIR = true
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_11.toString()
            useIR = true
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion versions.compose
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
    implementation(project(":core"))
    implementation(project(":uicentral"))
    implementation(project(":poscore"))
    implementation(project(":pos"))
    implementation(project(":analytics"))

    creditclubImplementation(project(":telpo"))
    polarisImplementation(project(":nexgo"))
    polarisImplementation(project(":telpo"))
    accessImplementation(project(":telpo"))
    gtbankImplementation(project(":dspread"))
    purpleImplementation(project(":telpo"))
    purpleImplementation(project(":nexgo"))
    purpleImplementation(project(":dspread"))
    groomingImplementation(project(":telpo"))
    groomingImplementation(project(":nexgo"))
    heritageImplementation(project(":wizar"))
    haloImplementation(project(":dspread"))
    haloImplementation(project(":nexgo"))


    implementation("androidx.activity:activity-ktx:${Versions.activityKtx}")
    implementation("androidx.legacy:legacy-support-v4:1.0.0")

    // Lifecycle components
    kapt("androidx.lifecycle:lifecycle-common-java8:${Versions.lifecycle}")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:${Versions.lifecycle}")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:${Versions.lifecycle}")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:${Versions.lifecycle}")
    implementation("androidx.lifecycle:lifecycle-common-java8:${Versions.lifecycle}")

    implementation("androidx.recyclerview:recyclerview:1.2.1")
    implementation("androidx.appcompat:appcompat:${Versions.appcompat}")
    implementation("androidx.constraintlayout:constraintlayout:${Versions.constraintLayout}")
    implementation("com.google.android.material:material:${Versions.material}")
    implementation("androidx.cardview:cardview:1.0.0")
    implementation("de.hdodenhof:circleimageview:2.1.0")
    implementation("com.loopj.android:android-async-http:1.4.11")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.coroutines}")

    implementation("com.google.android.flexbox:flexbox:3.0.0")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${Versions.kotlin}")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:${Versions.serialization}")

    implementation("androidx.room:room-runtime:${Versions.room}")
    kapt("androidx.room:room-compiler:${Versions.room}")

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:${Versions.room}")

    // Test helpers
    testImplementation("androidx.room:room-testing:${Versions.room}")

    implementation("com.github.thoughtbot:expandable-recycler-view:v1.4") {
        exclude(group: "com.thoughtbot", module: "expandablerecyclerview")
    }

    testImplementation("junit:junit:4.13.2")

    // Co-routine Tests
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:${Versions.coroutines}")

    implementation("me.relex:circleindicator:2.1.6")
    implementation("io.coil-kt:coil:${Versions.coil}")

    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:${Versions.navigation}")
    implementation("androidx.navigation:navigation-ui-ktx:${Versions.navigation}")

    // Dynamic Feature Module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:${Versions.navigation}")

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:${Versions.navigation}")
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:${Versions.desugarJdk}")

    implementation("com.github.smart-fun:XmlToJson:1.5.1")
    debugImplementation("androidx.compose.ui:ui-tooling:${Versions.compose}")
    debugImplementation("org.jetbrains.kotlin:kotlin-reflect:${Versions.kotlin}")
    debugImplementation("com.squareup.leakcanary:leakcanary-android:2.7")
    testImplementation("androidx.test.ext:junit-ktx:1.1.3")
}
