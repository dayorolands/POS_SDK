apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlinx-serialization'

kapt {
    useBuildCache = true
}

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
        releaseStaging {
            matchingFallbacks = ['release', 'debug']
        }
    }
    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    api 'com.loopj.android:android-async-http:1.4.11'
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.core:core-ktx:${versions.coreKtx}"
    implementation 'org.bouncycastle:bcprov-jdk15on:1.68'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:${versions.serialization}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"

    api "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    api "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    api "com.squareup.retrofit2:converter-scalars:${versions.retrofit}"
    api 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'

    implementation "androidx.room:room-runtime:${versions.room}"
    kapt "androidx.room:room-compiler:${versions.room}"

    api "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}"

    testImplementation 'junit:junit:4.13.2'

    // Core library
    androidTestImplementation 'androidx.test:core:1.3.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.ext:truth:1.3.0'
    androidTestImplementation 'com.google.truth:truth:1.1.2'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Co-routine Tests
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.7'

    api "org.koin:koin-android:${versions.koin}"
    api "org.koin:koin-androidx-scope:${versions.koin}"
    api "org.koin:koin-androidx-viewmodel:${versions.koin}"

    api "com.github.esafirm:android-image-picker:3.0.0-beta1"
    api "com.github.bumptech.glide:glide:${versions.glide}"
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    api 'com.google.android.play:core-ktx:1.8.1'

    api "com.google.firebase:firebase-crashlytics:${versions.firebaseCrashlytics}"
    api "com.google.firebase:firebase-core:${versions.firebase}"
    api "com.google.firebase:firebase-analytics:${versions.firebase}"
    api 'com.google.firebase:firebase-perf:19.1.1'
    api "androidx.work:work-runtime-ktx:${versions.work}"
    api 'com.google.android.gms:play-services-location:18.0.0'
    api "androidx.security:security-crypto:1.1.0-alpha03"

    implementation "androidx.navigation:navigation-fragment-ktx:${versions.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.navigation}"
    implementation "io.objectbox:objectbox-kotlin:${versions.objectBox}"
    implementation "androidx.activity:activity-ktx:${versions.activityKtx}"
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:${versions.desugarJdk}"

    api "androidx.compose.ui:ui:${versions.compose}"
    api "androidx.compose.ui:ui-util:1.0.0-beta04"
    // Tooling support (Previews, etc.)
    api "androidx.compose.ui:ui-tooling:${versions.compose}"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    api "androidx.compose.foundation:foundation:${versions.compose}"
    // Material Design
    api "androidx.compose.material:material:${versions.compose}"
    // Material design icons
    api "androidx.compose.material:material-icons-core:${versions.compose}"
    api "androidx.compose.material:material-icons-extended:${versions.compose}"
    // Integration with activities
    api "androidx.activity:activity-compose:1.3.0-alpha08"
    // Integration with ViewModels
    api "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha05"
    // Integration with observables
    api "androidx.compose.runtime:runtime-livedata:${versions.compose}"
    api "androidx.compose.runtime:runtime-rxjava2:${versions.compose}"
    api "com.google.accompanist:accompanist-coil:${versions.accompanist}"
    api "com.google.accompanist:accompanist-insets:${versions.accompanist}"
    api "com.google.accompanist:accompanist-swiperefresh:${versions.accompanist}"
    api "com.google.accompanist:accompanist-flowlayout:${versions.accompanist}"
    api "androidx.palette:palette-ktx:1.0.0"
    api "androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha07"
    api "androidx.navigation:navigation-compose:2.4.0-alpha01"
    api "org.jetbrains.kotlinx:kotlinx-datetime:0.2.0"
    // UI Tests
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:${versions.compose}"
}

repositories {
    mavenCentral()
}

apply plugin: 'io.objectbox'
